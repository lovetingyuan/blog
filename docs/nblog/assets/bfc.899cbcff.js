export default'<h2 id="bfc块级格式上下文">BFC块级格式上下文</h2>\n<p>在<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context">MDN</a>上查看</p>\n<p>BFC是Web页面的可视CSS渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。</p>\n<p>使一个元素形成BFC的方式有：</p>\n<ul>\n<li>根元素(html)</li>\n<li>浮动元素（元素的 float 不是 none）</li>\n<li>绝对定位元素（元素的 position 为 absolute 或 fixed）</li>\n<li>行内块元素（元素的 display 为 inline-block）</li>\n<li>表格单元格（元素的 display为 table-cell，HTML表格单元格默认为该值）</li>\n<li>表格标题（元素的 display 为 table-caption，HTML表格标题默认为该值）</li>\n<li>匿名表格单元格元素（元素的 display为 table、table-row、 table-row-group、table-header-group、table-footer-group（分别是HTML * table、row、tbody、thead、tfoot的默认属性）或 inline-table）</li>\n<li>overflow 值不为 visible 的块元素</li>\n<li>display 值为 flow-root 的元素</li>\n<li>contain 值为 layout、content或 paint 的元素</li>\n<li>弹性元素（display为 flex 或 inline-flex元素的直接子元素）</li>\n<li>网格元素（display为 grid 或 inline-grid 元素的直接子元素）</li>\n<li>多列容器（元素的 column-count 或 column-width 不为 auto，包括 column-count 为 1）</li>\n<li>column-span 为 all 的元素始终会创建一个新的BFC，即使该元素没有包裹在一个多列容器中（标准变更，Chrome bug）。</li>\n</ul>\n<hr>\n<p><strong>Advertisement :)</strong></p>\n<ul>\n<li><strong><a href="https://nodeca.github.io/pica/demo/">pica</a></strong> - high quality and fast image\nresize in browser.</li>\n<li><strong><a href="https://github.com/nodeca/babelfish/">babelfish</a></strong> - developer friendly\ni18n with plurals support and easy syntax.</li>\n</ul>\n<p>You will like those projects!</p>\n<hr>\n<h1 id="h1-heading-8-">h1 Heading 8-)</h1>\n<h2 id="h2-heading">h2 Heading</h2>\n<h3 id="h3-heading">h3 Heading</h3>\n<h4 id="h4-heading">h4 Heading</h4>\n<h5 id="h5-heading">h5 Heading</h5>\n<h6 id="h6-heading">h6 Heading</h6>\n<h2 id="horizontal-rules">Horizontal Rules</h2>\n<hr>\n<hr>\n<hr>\n<h2 id="typographic-replacements">Typographic replacements</h2>\n<p>Enable typographer option to see result.</p>\n<p>(c) (C) (r) (R) (tm) (TM) (p) (P) +-</p>\n<p>test.. test... test..... test?..... test!....</p>\n<p>!!!!!! ???? ,,  -- ---</p>\n<p>&quot;Smartypants, double quotes&quot; and &#39;single quotes&#39;</p>\n<h2 id="emphasis">Emphasis</h2>\n<p><strong>This is bold text</strong></p>\n<p><strong>This is bold text</strong></p>\n<p><em>This is italic text</em></p>\n<p><em>This is italic text</em></p>\n<p><del>Strikethrough</del></p>\n<h2 id="blockquotes">Blockquotes</h2>\n<blockquote>\n<p>Blockquotes can also be nested...</p>\n<blockquote>\n<p>...by using additional greater-than signs right next to each other...</p>\n<blockquote>\n<p>...or with spaces between arrows.</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h2 id="lists">Lists</h2>\n<p>Unordered</p>\n<ul>\n<li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li>\n<li>Sub-lists are made by indenting 2 spaces:<ul>\n<li>Marker character change forces new list start:<ul>\n<li>Ac tristique libero volutpat at</li>\n</ul>\n<ul>\n<li>Facilisis in pretium nisl aliquet</li>\n</ul>\n<ul>\n<li>Nulla volutpat aliquam velit</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Very easy!</li>\n</ul>\n<p>Ordered</p>\n<ol>\n<li>Lorem ipsum dolor sit amet</li>\n<li>Consectetur adipiscing elit</li>\n<li>Integer molestie lorem at massa</li>\n</ol>\n<ol>\n<li>You can use sequential numbers...</li>\n<li>...or keep all the numbers as <code>1.</code></li>\n</ol>\n<p>Start numbering with offset:</p>\n<ol start="57">\n<li>foo</li>\n<li>bar</li>\n</ol>\n<h2 id="code">Code</h2>\n<p>Inline <code>code</code></p>\n<p>Indented code</p>\n<pre><code>// Some comments\nline 1 of code\nline 2 of code\nline 3 of code\n</code></pre>\n<p>Block code &quot;fences&quot;</p>\n<pre><code>Sample text here...\n</code></pre>\n<p>Syntax highlighting</p>\n<pre><code class="language-js">var foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n</code></pre>\n<h2 id="tables">Tables</h2>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>data</td>\n<td>path to data files to supply the data that will be passed into templates.</td>\n</tr>\n<tr>\n<td>engine</td>\n<td>engine to be used for processing templates. Handlebars is the default.</td>\n</tr>\n<tr>\n<td>ext</td>\n<td>extension to be used for dest files.</td>\n</tr>\n</tbody></table>\n<p>Right aligned columns</p>\n<table>\n<thead>\n<tr>\n<th align="right">Option</th>\n<th align="right">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="right">data</td>\n<td align="right">path to data files to supply the data that will be passed into templates.</td>\n</tr>\n<tr>\n<td align="right">engine</td>\n<td align="right">engine to be used for processing templates. Handlebars is the default.</td>\n</tr>\n<tr>\n<td align="right">ext</td>\n<td align="right">extension to be used for dest files.</td>\n</tr>\n</tbody></table>\n<h2 id="links">Links</h2>\n<p><a href="http://dev.nodeca.com">link text</a></p>\n<p><a href="http://nodeca.github.io/pica/demo/" title="title text!">link with title</a></p>\n<p>Autoconverted link <a href="https://github.com/nodeca/pica">https://github.com/nodeca/pica</a> (enable linkify to see)</p>\n<h2 id="images">Images</h2>\n<p><img src="https://octodex.github.com/images/minion.png" alt="Minion">\n<img src="https://octodex.github.com/images/stormtroopocat.jpg" alt="Stormtroopocat" title="The Stormtroopocat"></p>\n<p>Like links, Images also have a footnote style syntax</p>\n<p><img src="https://octodex.github.com/images/dojocat.jpg" alt="Alt text" title="The Dojocat"></p>\n<p>With a reference later in the document defining the URL location:</p>\n<h2 id="plugins">Plugins</h2>\n<p>The killer feature of <code>markdown-it</code> is very effective support of\n<a href="https://www.npmjs.org/browse/keyword/markdown-it-plugin">syntax plugins</a>.</p>\n<h3 id="emojies"><a href="https://github.com/markdown-it/markdown-it-emoji">Emojies</a></h3>\n<blockquote>\n<p>Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:</p>\n<p>Shortcuts (emoticons): :-) :-( 8-) ;)</p>\n</blockquote>\n<p>see <a href="https://github.com/markdown-it/markdown-it-emoji#change-output">how to change output</a> with twemoji.</p>\n<h3 id="subscript--superscript"><a href="https://github.com/markdown-it/markdown-it-sub">Subscript</a> / <a href="https://github.com/markdown-it/markdown-it-sup">Superscript</a></h3>\n<ul>\n<li>19^th^</li>\n<li>H<del>2</del>O</li>\n</ul>\n<h3 id="ins"><a href="https://github.com/markdown-it/markdown-it-ins">&lt;ins&gt;</a></h3>\n<p>++Inserted text++</p>\n<h3 id="mark"><a href="https://github.com/markdown-it/markdown-it-mark">&lt;mark&gt;</a></h3>\n<p>==Marked text==</p>\n<h3 id="footnotes"><a href="https://github.com/markdown-it/markdown-it-footnote">Footnotes</a></h3>\n<p>Footnote 1 link[^first].</p>\n<p>Footnote 2 link[^second].</p>\n<p>Inline footnote^[Text of inline footnote] definition.</p>\n<p>Duplicated footnote reference[^second].</p>\n<p>[^first]: Footnote <strong>can have markup</strong></p>\n<pre><code>and multiple paragraphs.\n</code></pre>\n<p>[^second]: Footnote text.</p>\n<h3 id="definition-lists"><a href="https://github.com/markdown-it/markdown-it-deflist">Definition lists</a></h3>\n<p>Term 1</p>\n<p>:   Definition 1\nwith lazy continuation.</p>\n<p>Term 2 with <em>inline markup</em></p>\n<p>:   Definition 2</p>\n<pre><code>    { some code, part of Definition 2 }\n\nThird paragraph of definition 2.\n</code></pre>\n<p><em>Compact style:</em></p>\n<p>Term 1\n  ~ Definition 1</p>\n<p>Term 2\n  ~ Definition 2a\n  ~ Definition 2b</p>\n<h3 id="abbreviations"><a href="https://github.com/markdown-it/markdown-it-abbr">Abbreviations</a></h3>\n<p>This is HTML abbreviation example.</p>\n<p>It converts &quot;HTML&quot;, but keep intact partial entries like &quot;xxxHTMLyyy&quot; and so on.</p>\n<p>*[HTML]: Hyper Text Markup Language</p>\n<h3 id="custom-containers"><a href="https://github.com/markdown-it/markdown-it-container">Custom containers</a></h3>\n<p>::: warning\n<em>here be dragons</em>\n:::</p>\n';
